/**
 * TESTS para el m√≥dulo sanitizer
 * Ejecutar en consola del navegador para verificar funcionamiento
 */

import {
    sanitizeInput,
    containsDangerousContent,
    isValidEmail,
    isValidPhone,
    isSpam,
    truncate,
    isValidName,
    validateMessageLength,
    sanitizeURL,
    detectSensitiveData
} from './sanitizer.js';

console.log('üß™ Iniciando tests de seguridad...\n');

// Test 1: sanitizeInput
console.log('1Ô∏è‚É£ Test sanitizeInput:');
console.assert(sanitizeInput('<script>alert("XSS")</script>') === '&lt;script&gt;alert(&quot;XSS&quot;)&lt;&#x2F;script&gt;', 'Deber√≠a escapar tags HTML');
console.assert(sanitizeInput('Texto normal') === 'Texto normal', 'No deber√≠a modificar texto normal');
console.log('   ‚úÖ sanitizeInput OK\n');

// Test 2: containsDangerousContent
console.log('2Ô∏è‚É£ Test containsDangerousContent:');
console.assert(containsDangerousContent('<script>') === true, 'Deber√≠a detectar script tag');
console.assert(containsDangerousContent('onclick=') === true, 'Deber√≠a detectar event handlers');
console.assert(containsDangerousContent('Hola mundo') === false, 'No deber√≠a detectar texto normal');
console.log('   ‚úÖ containsDangerousContent OK\n');

// Test 3: isValidEmail
console.log('3Ô∏è‚É£ Test isValidEmail:');
console.assert(isValidEmail('usuario@ejemplo.com') === true, 'Deber√≠a aceptar email v√°lido');
console.assert(isValidEmail('test@test.co.ar') === true, 'Deber√≠a aceptar email con dominio .ar');
console.assert(isValidEmail('invalid.email') === false, 'Deber√≠a rechazar email sin @');
console.assert(isValidEmail('user@') === false, 'Deber√≠a rechazar email sin dominio');
console.assert(isValidEmail('@domain.com') === false, 'Deber√≠a rechazar email sin usuario');
console.log('   ‚úÖ isValidEmail OK\n');

// Test 4: isValidPhone (Internacional)
console.log('4Ô∏è‚É£ Test isValidPhone (Internacional):');
// Argentina
console.assert(isValidPhone('+54 11 1234-5678') === true, 'Deber√≠a aceptar formato Argentina con +54');
console.assert(isValidPhone('0351 123 4567') === true, 'Deber√≠a aceptar formato local Argentina');
console.assert(isValidPhone('3547340673') === true, 'Deber√≠a aceptar n√∫mero sin formato');
// USA
console.assert(isValidPhone('+1 555 123 4567') === true, 'Deber√≠a aceptar formato USA');
console.assert(isValidPhone('(555) 123-4567') === true, 'Deber√≠a aceptar formato USA con par√©ntesis');
// Espa√±a
console.assert(isValidPhone('+34 612 34 56 78') === true, 'Deber√≠a aceptar formato Espa√±a');
// M√©xico
console.assert(isValidPhone('+52 55 1234 5678') === true, 'Deber√≠a aceptar formato M√©xico');
// Reino Unido
console.assert(isValidPhone('+44 20 7946 0958') === true, 'Deber√≠a aceptar formato UK');
// Inv√°lidos
console.assert(isValidPhone('123') === false, 'Deber√≠a rechazar n√∫mero muy corto');
console.assert(isValidPhone('abc123') === false, 'Deber√≠a rechazar letras');
console.assert(isValidPhone('+1234567890123456') === false, 'Deber√≠a rechazar n√∫mero muy largo');
console.log('   ‚úÖ isValidPhone OK (soporta m√∫ltiples pa√≠ses)\n');

// Test 5: isSpam
console.log('5Ô∏è‚É£ Test isSpam:');
console.assert(isSpam('CLICK HERE TO WIN $$$') === true, 'Deber√≠a detectar spam obvio');
console.assert(isSpam('Buy viagra now!!!') === true, 'Deber√≠a detectar keywords de spam');
console.assert(isSpam('Hola, necesito informaci√≥n') === false, 'No deber√≠a detectar mensaje normal');
console.assert(isSpam('MENSAJE TODO EN MAYUSCULAS') === true, 'Deber√≠a detectar exceso de may√∫sculas');
console.log('   ‚úÖ isSpam OK\n');

// Test 6: truncate
console.log('6Ô∏è‚É£ Test truncate:');
console.assert(truncate('texto largo', 5) === 'texto', 'Deber√≠a truncar al l√≠mite');
console.assert(truncate('corto', 100) === 'corto', 'No deber√≠a modificar texto corto');
console.log('   ‚úÖ truncate OK\n');

// Test 7: isValidName
console.log('7Ô∏è‚É£ Test isValidName:');
console.assert(isValidName('Juan P√©rez') === true, 'Deber√≠a aceptar nombre con acento');
console.assert(isValidName('Mar√≠a Jos√© L√≥pez') === true, 'Deber√≠a aceptar nombre compuesto');
console.assert(isValidName('John123') === false, 'Deber√≠a rechazar n√∫meros');
console.assert(isValidName('A') === false, 'Deber√≠a rechazar nombre muy corto');
console.log('   ‚úÖ isValidName OK\n');

// Test 8: validateMessageLength
console.log('8Ô∏è‚É£ Test validateMessageLength:');
console.assert(validateMessageLength('Mensaje v√°lido con suficiente longitud').valid === true, 'Deber√≠a aceptar mensaje v√°lido');
console.assert(validateMessageLength('Corto').valid === false, 'Deber√≠a rechazar mensaje muy corto');
console.assert(validateMessageLength('a'.repeat(6000)).valid === false, 'Deber√≠a rechazar mensaje muy largo');
console.log('   ‚úÖ validateMessageLength OK\n');

// Test 9: sanitizeURL
console.log('9Ô∏è‚É£ Test sanitizeURL:');
console.assert(sanitizeURL('https://wa.me/123456') === 'https://wa.me/123456', 'Deber√≠a aceptar WhatsApp URL');
console.assert(sanitizeURL('javascript:alert(1)') === null, 'Deber√≠a rechazar javascript: protocol');
console.assert(sanitizeURL('https://malicious-site.com') === null, 'Deber√≠a rechazar dominio no whitelisted');
console.log('   ‚úÖ sanitizeURL OK\n');

// Test 10: detectSensitiveData
console.log('üîü Test detectSensitiveData:');
console.log('   üìã Probando detecci√≥n de informaci√≥n sensible...\n');

// Test DNI argentino
const testDNI = detectSensitiveData('Mi DNI es 12345678');
console.assert(testDNI.hasSensitiveData === true, 'Deber√≠a detectar DNI');
console.assert(testDNI.types.includes('dni'), 'Deber√≠a identificar tipo DNI');
console.log('   ‚úÖ DNI detectado:', testDNI);

// Test CUIT argentino
const testCUIT = detectSensitiveData('Mi CUIT es 20-12345678-9');
console.assert(testCUIT.hasSensitiveData === true, 'Deber√≠a detectar CUIT');
console.assert(testCUIT.types.includes('cuit'), 'Deber√≠a identificar tipo CUIT');
console.log('   ‚úÖ CUIT detectado:', testCUIT);

// Test tarjeta de cr√©dito
const testCard = detectSensitiveData('Tarjeta: 4532 1234 5678 9010');
console.assert(testCard.hasSensitiveData === true, 'Deber√≠a detectar tarjeta');
console.assert(testCard.types.includes('creditCard'), 'Deber√≠a identificar tipo creditCard');
console.log('   ‚úÖ Tarjeta detectada:', testCard);

// Test contrase√±a
const testPassword = detectSensitiveData('Mi password: micontrase√±a123');
console.assert(testPassword.hasSensitiveData === true, 'Deber√≠a detectar password');
console.assert(testPassword.types.includes('password'), 'Deber√≠a identificar tipo password');
console.log('   ‚úÖ Password detectado:', testPassword);

// Test m√∫ltiples datos sensibles
const testMultiple = detectSensitiveData('DNI 12345678 y tarjeta 4532123456789010');
console.assert(testMultiple.hasSensitiveData === true, 'Deber√≠a detectar m√∫ltiples datos');
console.assert(testMultiple.types.length === 2, 'Deber√≠a detectar 2 tipos');
console.log('   ‚úÖ M√∫ltiples datos detectados:', testMultiple);

// Test mensaje normal (no sensible)
const testNormal = detectSensitiveData('Hola, necesito informaci√≥n sobre terapia online');
console.assert(testNormal.hasSensitiveData === false, 'No deber√≠a detectar datos en mensaje normal');
console.assert(testNormal.types.length === 0, 'No deber√≠a tener tipos detectados');
console.log('   ‚úÖ Mensaje normal (sin datos sensibles):', testNormal);

console.log('\n   ‚úÖ detectSensitiveData OK\n');

console.log('‚úÖ Todos los tests pasaron correctamente!');
console.log('üîí El m√≥dulo de sanitizaci√≥n est√° funcionando correctamente.');

// Ejemplos adicionales para ver en acci√≥n
console.log('\nüìö EJEMPLOS ADICIONALES DE DETECCI√ìN:\n');

console.log('Ejemplo 1 - DNI:');
console.log('Input: "Mi documento es 45678901"');
console.log('Output:', detectSensitiveData('Mi documento es 45678901'));

console.log('\nEjemplo 2 - Tarjeta:');
console.log('Input: "Mi tarjeta termina en 1234-5678-9012-3456"');
console.log('Output:', detectSensitiveData('Mi tarjeta termina en 1234-5678-9012-3456'));

console.log('\nEjemplo 3 - CUIT:');
console.log('Input: "CUIT: 27 12345678 3"');
console.log('Output:', detectSensitiveData('CUIT: 27 12345678 3'));

console.log('\nEjemplo 4 - Sin datos sensibles:');
console.log('Input: "Necesito ayuda con ansiedad"');
console.log('Output:', detectSensitiveData('Necesito ayuda con ansiedad'));
